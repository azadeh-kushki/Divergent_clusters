# -*- coding: utf-8 -*-
"""normativeCov3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/
"""

!pip install pcntoolkit

import pcntoolkit as pcn

pcn.normative.estimate(covfile = 'covariate_normsample_df_abcd_male.txt',
                       respfile = 'features_normsample_df3_areax.txt',
                       testcov = 'covariate_normsample_df_pond_male.txt',
                       testresp = 'feature_df1_areax.txt',
                       cvfolds = None,
                       alg = 'blr',
                       outputsuffix = '_PondAreaMale')

pcn.normative.estimate(covfile = 'covariate_normsample_df_abcd_male.txt',
                       respfile = 'features_normsample_df3_thicknessx.txt',
                       testcov = 'covariate_normsample_df_pond_male.txt',
                       testresp = 'feature_df1_thicknessx.txt',
                       cvfolds = None,
                       alg = 'blr',
                       outputsuffix = '_PondThicknessMale')

pcn.normative.estimate(covfile = 'covariate_normsample_df_abcd_male.txt',
                       respfile = 'features_normsample_df3_volumex.txt',
                       testcov = 'covariate_normsample_df_pond_male.txt',
                       testresp = 'feature_df1_volumex.txt',
                       cvfolds = None,
                       alg = 'blr',
                       outputsuffix = '_PondVolumeMale')

pcn.normative.estimate(covfile = 'covariate_normsample_df_abcd_male.txt',
                       respfile = 'features_normsample_df3_subcortx.txt',
                       testcov = 'covariate_normsample_df_pond_male.txt',
                       testresp = 'feature_df1_subcortx.txt',
                       cvfolds = None,
                       alg = 'blr',
                       outputsuffix = '_PondSubcortMale')

"""

```
# This is formatted as code
```

NEXT : POND FEMALE"""

pcn.normative.estimate(covfile = 'covariate_normsample_df_abcd_female.txt',
                       respfile = 'features_normsample_df3_areax_fe.txt',
                       testcov = 'covariate_normsample_df_pond_female.txt',
                       testresp = 'feature_df1_areaxFE.txt',
                       cvfolds = None,
                       alg = 'blr',
                       outputsuffix = '_PondAreaFemale')

pcn.normative.estimate(covfile = 'covariate_normsample_df_abcd_female.txt',
                       respfile = 'features_normsample_df3_thicknessx_fe.txt',
                       testcov = 'covariate_normsample_df_pond_female.txt',
                       testresp = 'feature_df1_thicknessxFE.txt',
                       cvfolds = None,
                       alg = 'blr',
                       outputsuffix = '_PondThicknessFemale')

pcn.normative.estimate(covfile = 'covariate_normsample_df_abcd_female.txt',
                       respfile = 'features_normsample_df3_volumex_fe.txt',
                       testcov = 'covariate_normsample_df_pond_female.txt',
                       testresp = 'feature_df1_volumexFE.txt',
                       cvfolds = None,
                       alg = 'blr',
                       outputsuffix = '_PondVolumeFemale')

pcn.normative.estimate(covfile = 'covariate_normsample_df_abcd_female.txt',
                       respfile = 'features_normsample_df3_subcortx_fe.txt',
                       testcov = 'covariate_normsample_df_pond_female.txt',
                       testresp = 'feature_df1_subcortxFE.txt',
                       cvfolds = None,
                       alg = 'blr',
                       outputsuffix = '_PondSubcortFemale')

"""NEXT: HBN MALE

"""

pcn.normative.estimate(covfile = 'covariate_normsample_df_abcd_male.txt',
                       respfile = 'features_normsample_df3_areax.txt',
                       testcov = 'covariate_normsample_df_hbn_male.txt',
                       testresp = 'feature_df2_areax.txt',
                       cvfolds = None,
                       alg = 'blr',
                       outputsuffix = '_HbnAreaMale')

pcn.normative.estimate(covfile = 'covariate_normsample_df_abcd_male.txt',
                       respfile = 'features_normsample_df3_thicknessx.txt',
                       testcov = 'covariate_normsample_df_hbn_male.txt',
                       testresp = 'feature_df2_thicknessx.txt',
                       cvfolds = None,
                       alg = 'blr',
                       outputsuffix = '_HbnThicknessMale')

pcn.normative.estimate(covfile = 'covariate_normsample_df_abcd_male.txt',
                       respfile = 'features_normsample_df3_volumex.txt',
                       testcov = 'covariate_normsample_df_hbn_male.txt',
                       testresp = 'feature_df2_volumex.txt',
                       cvfolds = None,
                       alg = 'blr',
                       outputsuffix = '_HbnVolumeMale')

pcn.normative.estimate(covfile = 'covariate_normsample_df_abcd_male.txt',
                       respfile = 'features_normsample_df3_subcortx.txt',
                       testcov = 'covariate_normsample_df_hbn_male.txt',
                       testresp = 'feature_df2_subcortx.txt',
                       cvfolds = None,
                       alg = 'blr',
                       outputsuffix = '_HbnSubcortMale')

"""NEXT: HBN Females

"""

pcn.normative.estimate(covfile = 'covariate_normsample_df_abcd_female.txt',
                       respfile = 'features_normsample_df3_areax_fe.txt',
                       testcov = 'covariate_normsample_df_hbn_female.txt',
                       testresp = 'feature_df2_areaxFE.txt',
                       cvfolds = None,
                       alg = 'blr',
                       outputsuffix = '_HbnAreaFemale')

pcn.normative.estimate(covfile = 'covariate_normsample_df_abcd_female.txt',
                       respfile = 'features_normsample_df3_thicknessx_fe.txt',
                       testcov = 'covariate_normsample_df_hbn_female.txt',
                       testresp = 'feature_df2_thicknessxFE.txt',
                       cvfolds = None,
                       alg = 'blr',
                       outputsuffix = '_HbnThicknessFemale')

pcn.normative.estimate(covfile = 'covariate_normsample_df_abcd_female.txt',
                       respfile = 'features_normsample_df3_volumex_fe.txt',
                       testcov = 'covariate_normsample_df_hbn_female.txt',
                       testresp = 'feature_df2_volumexFE.txt',
                       cvfolds = None,
                       alg = 'blr',
                       outputsuffix = '_HbnVolumeFemale')

pcn.normative.estimate(covfile = 'covariate_normsample_df_abcd_female.txt',
                       respfile = 'features_normsample_df3_subcortx_fe.txt',
                       testcov = 'covariate_normsample_df_hbn_female.txt',
                       testresp = 'feature_df2_subcortxFE.txt',
                       cvfolds = None,
                       alg = 'blr',
                       outputsuffix = '_HbnSubcorticalFemale')